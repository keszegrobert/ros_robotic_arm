<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find owi535)/worlds/owi535.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro $(find owi535)/urdf/owi535.urdf" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
    args="-urdf -x -0.0 -y 0.0 -R 0.0 -P 0.0 -Y 0.0 -model owi535 -param robot_description"/>

  <node name="mark_spawner_21" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
    args="-file $(find owi535)/urdf/marker21.urdf -urdf -model test_marker_21" />

  <node name="mark_spawner_22" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
   args="-file $(find owi535)/urdf/marker22.urdf -urdf -model test_marker_22" />

  <node name="mark_spawner_23" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
    args="-file $(find owi535)/urdf/marker23.urdf -urdf -model test_marker_23" />

  <rosparam file="$(find owi535)/config/controllers.yaml" command="load"/>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" ns="/owi535"
    args="rotationbase_position_controller 
    shoulder_position_controller 
    elbow_position_controller 
    wrist_position_controller 
    gripper_position_controller" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen" />
  <include file="$(find owi535)/launch/single.launch">
  </include>

</launch>
